[gd_scene load_steps=9 format=3 uid="uid://cmwsd3wvkvm8c"]

[ext_resource type="Script" path="res://Code/Camera/camera_raycast.gd" id="1_6et27"]
[ext_resource type="Script" path="res://Code/Camera/camera_movement.gd" id="2_fd0d8"]
[ext_resource type="PackedScene" uid="uid://dkdu5kucvf6n1" path="res://Prefabs/UI/colony_ui.tscn" id="4_pfcfw"]
[ext_resource type="PackedScene" uid="uid://mske5vq782j4" path="res://Prefabs/UI/resource_display.tscn" id="5_a0ya7"]

[sub_resource type="BoxMesh" id="BoxMesh_peyhc"]

[sub_resource type="BoxShape3D" id="BoxShape3D_im0lm"]

[sub_resource type="SphereMesh" id="SphereMesh_ck0kp"]

[sub_resource type="GDScript" id="GDScript_n5kc5"]
script/source = "#class_name EventManager
extends Node

const resource_path = \"res://Resources/Events/\"

var events: Array [GameEvent]
var queued_event: GameEvent

var timer: Timer
const  min_time_between_events: float = 60.0
const  max_time_between_events: float = 180.0

# We're mixing gui and game logic :(
var popup: EventPopup
# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	# Load events
	var dir = DirAccess.open(resource_path)
	if  dir:
		for filename in dir.get_files():
			print(\"found event file\")
			events.push_back(ResourceLoader.load(resource_path+filename))
	else:
		print(\"failed to open resource directory\")
	for event in events:
		event.doesitwork()
		
	# Set up event timer
	timer = Timer.new()
	add_child(timer)
	timer.wait_time = randf_range(min_time_between_events, max_time_between_events)
	timer.wait_time = 1.0
	timer.one_shot = true
	timer.start()
	timer.connect(\"timeout\", _on_timer_timeout.bind())

func _on_timer_timeout() -> void:
	print(\"timer timeout\")
	timer.wait_time = randf_range(min_time_between_events, max_time_between_events)
	# TODO : pick random event from available ones
	queued_event = events.pick_random()
	popup = preload(\"res://Prefabs/UI/event_ui.tscn\").instantiate()
	add_child(popup)
	popup.setup(queued_event)
	queued_event.connect(\"event_choice_made\", consume_event.bind())
	

func consume_event() -> void:
	if events.find(queued_event) != -1:
		events.remove_at(events.find(queued_event))
	remove_child(popup)
	popup.queue_free()
	if(events.size()>0):
		timer.start()


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass


# TODO :
# Loading events on start - done
# Random timer for events - done
# Draw events from the ones that can occur (predicate)
# Discard events that happened - done
# Event choices 
# GUI
"

[node name="EventPlayground" type="Node3D"]

[node name="RaycastCamera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, -0.446245, 0.894911, 0, -0.894911, -0.446245, 0, 4.09039, 0)
script = ExtResource("1_6et27")

[node name="CameraMovement" type="Node" parent="RaycastCamera3D"]
script = ExtResource("2_fd0d8")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(100, 0, 0, 0, 0.1, 0, 0, 0, 100, 0, 0, 0)
mesh = SubResource("BoxMesh_peyhc")

[node name="Area3D" type="Area3D" parent="MeshInstance3D"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D/Area3D"]
shape = SubResource("BoxShape3D_im0lm")

[node name="MeshInstance3D2" type="MeshInstance3D" parent="."]
transform = Transform3D(0.756385, 0.547866, 0.357386, -0.5, 0.836516, -0.224144, -0.42176, -0.00915377, 0.906661, 0, 0.411957, -6.04737)
mesh = SubResource("BoxMesh_peyhc")
skeleton = NodePath("../MeshInstance3D")

[node name="Area3D" type="Area3D" parent="MeshInstance3D2"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D2/Area3D"]
transform = Transform3D(1, -2.04891e-08, 0, 2.77068e-08, 1, 1.86265e-09, 0, 1.21072e-08, 1, 0, 0, 0)
shape = SubResource("BoxShape3D_im0lm")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(0.75, -0.0473671, 0.65974, -0.5, 0.612372, 0.612372, -0.433013, -0.789149, 0.435596, 0, 3, 0)
shadow_enabled = true

[node name="MeshInstance3D3" type="MeshInstance3D" parent="."]
mesh = SubResource("SphereMesh_ck0kp")

[node name="EventManager" type="Node" parent="."]
script = SubResource("GDScript_n5kc5")

[node name="ColonyUi" parent="." instance=ExtResource("4_pfcfw")]

[node name="ResourceDisplay" parent="." instance=ExtResource("5_a0ya7")]
offset_top = 15.64
offset_bottom = 15.64
